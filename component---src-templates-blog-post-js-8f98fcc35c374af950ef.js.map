{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["MyArticle","styled","article","H1","h1","rhythm","P","p","HR","hr","UL","ul","BlogPostTemplate","props","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","style","scale","date","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel","pageQuery"],"mappings":"uPAqDMA,EAAYC,IAAOC,QAAV,2EAAGD,CAAH,qBAF0B,uBAMnCE,EAAKF,IAAOG,GAAV,oEAAGH,CAAH,sDACQI,YAAO,GARW,gBAa5BC,EAAIL,IAAOM,EAAV,mEAAGN,CAAH,qCAEYI,YAAO,IAGpBG,EAAKP,IAAOQ,GAAV,oEAAGR,CAAH,uBACWI,YAAO,IAGpBK,EAAKT,IAAOU,GAAV,oEAAGV,CAAH,4FAiEOW,UAzDU,SAACC,GAAkB,IACnCC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,YAAaC,EAAYH,EAAZG,SAGRC,EAIdH,EAJFI,eAEwBC,EAEtBL,EAHFM,KACEC,aAAeC,MAIZC,EAAkBR,EAAlBQ,SAAUC,EAAQT,EAARS,KAEjB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,kBAAC3B,EAAD,KACE,gCACE,kBAACG,EAAD,KAAKc,EAAKQ,YAAYH,OACtB,kBAAChB,EAAD,CACEsB,MAAK,iBACAC,aAAM,MAEVZ,EAAKQ,YAAYK,OAGtB,6BAASC,wBAAyB,CAACC,OAAQf,EAAKgB,QAChD,kBAACzB,EAAD,MACA,gCACE,kBAAC,IAAD,QAIJ,6BACE,kBAACE,EAAD,KACE,4BACGa,GACC,kBAAC,OAAD,CAAMW,GAAIX,EAASY,OAAOC,KAAMC,IAAI,QAApC,KACKd,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMU,GAAIV,EAAKW,OAAOC,KAAMC,IAAI,QAC7Bb,EAAKC,YAAYH,MADpB,WAaP,IAAMgB,EAAS","file":"component---src-templates-blog-post-js-8f98fcc35c374af950ef.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport {Link, graphql} from 'gatsby'\nimport styled from 'styled-components'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport {rhythm, scale} from '../utils/typography'\n\ntype Props = {\n  data: {\n    markdownRemark: {\n      id: string,\n      frontmatter: {\n        title: string,\n        date: string,\n        description: string,\n      },\n      excerpt: any,\n      html: string,\n    },\n    site: {\n      siteMetadata: {\n        title: string,\n      },\n    },\n  },\n  pageContext: {\n    previous: {\n      fields: {\n        slug: string,\n      },\n      frontmatter: {\n        title: string,\n      },\n    },\n    next: {\n      fields: {\n        slug: string,\n      },\n      frontmatter: {\n        title: string,\n      },\n    },\n  },\n  location: Location,\n}\n\nconst FONT_NANUM_GOTHIC: string = 'Nanum Gothic'\nconst FONT_NANUM_GOTHIC_CODING: string = 'Nanum Gothic Coding'\n\nconst MyArticle = styled.article`\n  font-family: ${FONT_NANUM_GOTHIC_CODING};\n`\n\nconst H1 = styled.h1`\n  margin-top: ${rhythm(1)};\n  margin-bottom: 0px;\n  font-family: ${FONT_NANUM_GOTHIC};\n`\n\nconst P = styled.p`\n  display: block;\n  margin-bottom: ${rhythm(1)};\n`\n\nconst HR = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`\n\nconst UL = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0px;\n`\n\nconst BlogPostTemplate = (props: Props) => {\n  const {data, pageContext, location} = props\n\n  const {\n    markdownRemark: post,\n    site: {\n      siteMetadata: {title: siteTitle},\n    },\n  } = data\n\n  const {previous, next} = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <MyArticle>\n        <header>\n          <H1>{post.frontmatter.title}</H1>\n          <P\n            style={{\n              ...scale(-1 / 5),\n            }}>\n            {post.frontmatter.date}\n          </P>\n        </header>\n        <section dangerouslySetInnerHTML={{__html: post.html}} />\n        <HR />\n        <footer>\n          <Bio />\n        </footer>\n      </MyArticle>\n\n      <nav>\n        <UL>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </UL>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD A hh:mm:ss\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}